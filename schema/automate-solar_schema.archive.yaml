definitions:
  #impinging flux: amount of a specific material from the PVD source that impinges on the substrate per unit time
  #normalise function can do e.g. applying QCM model to calc fluxes form sources
  
  name: Automate-Solar Schema
  sections:
    Position: #reusable for all objects that have a position in the sputtering (or other) process
      description: In BERTHA's coordinate system, x is the axis via which the substrate is loaded (increasing in the same direction), and z is vertical. x = y = z = 0 is the centre of the substrate holder upon loading in the chamber 
      quantities:
        center_xyz:
          type: float
          unit: meter
          shape: [3]
          description: 
        center_normal:
          type: float
          shape: [3]
          description: (unit) vector describing the direction of the source
        rotation:
          type: float
          description: angle of rotation of object around its centre_normal

    TimeSeriesData: #reusable for all time series data
      quantities:
        times:
          type: float
          shape: ['*']
          unit: second
        values:
          type: float
          shape: ['*']
          unit: volt
        mean:
          type: float
          unit: volt
        error:
          type: float
          unit: volt
        slope:
          desciption: the slope of a simple linear regression line fitted to the time series
          type: float
          unit: volt / second
          
    Sensor:
      description: a general sensor that is placed in the PVD chamber
      sub_sections:
        position: 
          section: "#/Position" 
        sensor_data:
          section: "#/TimeSeriesData"
                            
    QCMSensor: 
      description: a qcm sensor as a specific type of Sensor
      base_section: "#/Sensor"
      sub_sections: 
        crystal_info:
          section:
            quantities:
              info: # NA
                description: e.g. contact materials, part number etc
                type: str
              resonant_frequency: # NA
                type: float
                unit: hertz
        sensor_data:
          section:
            base_section: "#/TimeSeriesData"
            quantities:
              values: #[from MongoDB]: qcm_i_frequency_[Hz], repeat for each sensor 1-3
                shape: ['*']
                type: float
                unit: hertz
              mean: # qcm_i frequency hz mean
                type: float 
                unit: hertz
              error: # NA
                type: float
                unit: hertz
              slope: # qcm_i frequency_rate_[/s2]
                type: float
                unit: hertz / second
              slope_error: # qcm_i frequency_rate_[/s2]_error
                type: float
                unit: hertz / second
        remaining_lifetime:
          section:
            quantities:
              value: # qcm_i lifetime %
                type: float
              
        mass_deposition_rate:
          section:
            quantities:
              value: # qcm_i mass rate gm/cm2
                type: float
                unit: gram / meter**2
              error: # qcm_i mass rate gm/cm2 error
                type: float
                unit: gram / meter**2
    
    ChamberEnvironment:
      base_sections:
        - nomad_material_processing.vapor_deposition.ChamberEnvironment #includes gas type and flow, pressure
      sub_sections:
        gas_flow:
          section:  
            base_section: "#/TimeSeriesData"
            quantities: 
              values: #[from MongoDB]: gas_flow_[sccm]
                shape: ['*']
                type: float  
                unit: meter**3 / second
              mean: #[from MongoDB]: gas_flow_[sccm]_mean
                type: float 
                unit: meter**3
              error: #[from MongoDB]: gas_flow_[sccm]_std
                type: float
                unit: meter**3

            sub_sections:
              gas:
                section: nomad.datamodel.metainfo.basesections.PureSubstanceSection
                # pubchem thing, ask Hampus again

        setpoints: 
          section:
            quantities:
              pressure: # set_pressure_[mTorr]
                type: float
                unit: pascal
              flow: # NA
                type: float
                unit: meter**3 / second

        pressure:
          section:
            base_section: "#/TimeSeriesData"
            quantities:
              values: #[from MongoDB]: act_pressure_[mTorr]
                shape: ['*']
                type: float
                unit: pascal
              mean: #[from MongoDB]: act_pressure_[mTorr]_mean
                type: float
                unit: pascal
              error: #[from MongoDB]: act_pressure_[mTorr]_std
                type: float
                unit: pascal
          
        
        sensors:
          section: "#/QCMSensor"
          repeats: true 

    SputterTarget: # these will be created in NOMAD as separate entities. So we would address them with a reference of some kind
      base_sections:
        - nomad.datamodel.metainfo.basesections.CompositeSystem
        - nomad.datamodel.data.EntryData
      quantities:
        area:
          type: float
          unit: meter**2
        thickness:
          type: int
          unit: meter
        other_information:
          description: e.g. manufacturer, backing plate and bonding etc. 
          type: str              
          a_eln:
            component: RichTextEditQuantity

    Magnetron: 
      base_sections:
        - nomad_material_processing.physical_vapor_deposition.EvaporationSource
      sub_sections:
        setpoints: 
          section:
            quantities:
              set_power: # source i set power 
                type: float
                unit: watt
              set_voltage: # NA
                type: float
                unit: volt
              set_current: # NA
                type: float
                unit: ampere 
        
        power:
          section:
            base_section: "#/TimeSeriesData"
            quantities:
              values: # source i act power
                shape: ['*']
                type: float
                unit: watt
              mean: # source i act power mean
                type: float
                unit: watt
              error: # source i act power std
                type: float
                unit: watt
        voltage:
          section:
            base_section: "#/TimeSeriesData"

         
        power_supply:
          section:
            quantities:
              instrument_id: # source i power supply
                type: str 
                description: identifier for a specific instrument # could become a reference to an actual object (later)
              supply_type: # source i mode
                type: str
                description: e.g. RF or pulsed DC 
              ramp_rate: # source i ramp rate
                type: float
                unit: watt / second
                description: pulse frequency of source   

    SputterSource: 
      base_sections:
        - nomad_material_processing.physical_vapor_deposition.PVDSource
      sub_sections:
        material:  # source i material, converting from str to the NOMAD material object 
          section: "#/SputterTargetReference"
        vapor_source:
          section: "#Magnetron"
        vapor_distribution:
          section:  
            description: information on the geometrical origin, direction and spread of the vapor plume
            quantities:
              shape: # NA
                type: str
                description: info on e.g. what model is used
                a_eln:
                  component: RichTextEditQuantity
              n_parameter: # NA
                type: float
                description: in the Knudsen model, the exponent defining the spread of the plume
              A_parameter: # NA
                type: float
                description: in the Knudsen model, the coefficient defining the flux intensity
            sub_sections:
              origin:
                section: "#/Position" # NA
                description: the location of origin and the direction of the vapour plume 

    AutomateSolarSputterDeposition:
      base_sections:
      - nomad_material_processing.physical_vapor_deposition.SputterDeposition
      - nomad.datamodel.data.EntryData
      
      # SputterDeposition has the following quantities:
      # quantity <-- NA
      # name <-- series ID
      # datetime <-- TODO: add when trying in the lab
      # lab_id <-- "Uppsala University Ã…utomate-Solar"
      # description <-- Campaign description + campaign code + Series description

      sub_sections:
        preparation:
          section:
            quantities:
              base_pressure:  # set_pressure_[mTorr]
                type: float
                unit: pascal
                description: the base pressure of the vacuum chamber prior to initating an experiment  
              presputtering: # f'{dic["campaign_description"]}, {dic["campaign_id"]}, {dic["series_description"]}'
                type: str  

        steps:
          section: "#/SputterDepositionStep"
          repeats: true   

# Previously nested definitions:

    SputterTargetReference:
      base_sections:
        - nomad.datamodel.metainfo.basesections.CompositeSystemReference
      quantities:
        reference: 
          type: "#/SputterTarget" 
          m_annotations:
            eln:
              component: ReferenceEditQuantity
    
    SputterDepositionStep:
      base_sections:
        - nomad_material_processing.physical_vapor_deposition.VaporDepositionStep
      # SputterDeposition has the following quantities:
      # quantity <-- NA
      # name <-- Run_ID + Step_number 
      # start_time <-- first value from time series
      # comment <-- NA
      # creates_new_thin_film <-- Sample_produced
      # duration <-- Dwell_time[s]
      sub_sections:
        environment:
          section: "#/ChamberEnvironment"
        sources:
          section: "#/SputterSource"
          repeats: true 
      
# #samples
# #instrument info

    
